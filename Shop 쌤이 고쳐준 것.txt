
package model;

import com.sun.xml.internal.ws.api.ha.StickyFeature;

import java.util.Arrays;
import java.util.Scanner;
import model.Player;

public class Shop {
    //스캐너 설정
    Scanner sc = new Scanner(System.in);
    private PlayerController pc = new PlayerController();
    private LoginList lgl = new LoginList();



    /////////////// 필드 ///////////////

    //전체 아이템 배열
    String[] allItem = new String[]{"기본 검", "보통 검", "고급 검", "기본 지팡이", "보통 지팡이", "고급 지팡이",
            "기본 활", "보통 활", "고급 활", "기본갑옷", "보통갑옷", "고급갑옷", "목걸이", "반지", "팔찌"};
    String[] sellWarriorWeapon = new String[]{"기본 검", "보통 검", "고급 검"};
    String[] sellMageWeapon = new String[]{"기본 지팡이", "보통 지팡이", "고급 지팡이"};
    String[] sellArcherWeapon = new String[]{"기본 활", "보통 활", "고급 활"};
    String[] sellArmor = new String[]{"기본갑옷", "보통갑옷", "고급갑옷"};
    String[] sellAccessory = new String[]{"목걸이", "반지", "팔찌"};

    // 상점에서 구입할 때 가격을 나누기 위해 기본시리즈, 보통시리즈, 고급시리즈, 장신구 따로 배열을 나눔
    String[] basiclItem = new String[] {"기본 검", "기본 지팡이", "기본 활", "기본갑옷",};
    String[] nomalItem = new String[] {"보통 검", "보통 지팡이", "보통 활", "보통갑옷",};
    String[] highItem = new String[] {"고급 검", "고급 지팡이", "고급 활", "고급갑옷",};
    String[] AccessoryItem = new String[] {"목걸이", "반지", "팔찌"};

    // 상점에서 구입할 때 아이템별 가격
    // 기본 시리즈 = 2000원, 보통 시리즈 = 5000원, 고급 시리즈 = 10000, 장신구 = 8000원으로 설정
    int[] buyCost = new int[] {2000, 5000, 10000, 8000};


    /////////////// 생성자 ///////////////
    public Shop() {

    }
    /////////////// 메소드 ///////////////

    public void shoView() {
        // 아이디를 검색해서 그 해당 아이디의 정보를 가져오면됨!!
        //상점에 들어온 플레이어정보
        Player[] players = pc.showPlayer();
        Player myPlayer = players[0];
        
        System.out.println("\n************* Item Shop *************");
        System.out.println("\n구매하고자 하는 아이템의 번호를 입력하세요.");
        System.out.println("[1. 무기], [2. 방어구], [3. 장신구]");
        System.out.print(">> ");
        int selectItemNo = sc.nextInt();
        sc.nextLine();//밑에 nextLine 자동으로 넘어가는 현상 막기위해 작성

        switch (selectItemNo) {
            case 1://무기목록 출력
                System.out.println("\n직업을 선택해주세요!!");
                System.out.println("[1. 전사], [2. 마법사], [3. 궁수]");
                System.out.print(">> ");
                int jobChoice = sc.nextInt();
                sc.nextLine();
                if (jobChoice == 1) {
                    System.out.println("\n<기본 감: 2000원>   <보통 검: 5000원>   <고급 검: 10000원>");
                    break;
                } else if (jobChoice == 2) {
                    System.out.println("\n<기본 지팡이: 2000원>   <보통 지팡이: 5000원>   <고급 지팡이: 10000원>");
                    break;
                } else if (jobChoice == 3) {
                    System.out.println("\n<기본 활: 2000원>   <보통 활: 5000원>   <고급 활: 10000원>");
                    break;
                }
            case 2://방어구목록 출력
                System.out.println("\n<기본갑옷: 2000원>   <보통갑옷: 5000원>   <고급갑옷: 10000원>");
                break;
            case 3://장신구목록 출력
                System.out.println("\n<목걸이: 8000원>   <반지: 8000원>   <팔찌: 8000원>");
                break;
            default:
                System.out.println("잘못 입력하셨습니다.");
                System.out.println("처음부터 다시 입력해주시기 바랍니다!!");
        }

        System.out.println();
        System.out.println("\n 구매하고 싶은 아이템의 이름을 입력하세요.");
        System.out.print(">> ");
        String itemName = sc.nextLine();//replace(" ","") 공백문자열 제거//근데 여기서는 필요없음..

        System.out.println("선택한 아이템: " + itemName);

        for (int i = 0; i < allItem.length; i++) {
            if (itemName.equals(allItem[i])) {
                System.out.println("구매를 하시겠습니까? [Y/N]");
                String answer = sc.next();
                if (answer.equalsIgnoreCase("y")) {
                    System.out.println("\n구매가 완료되었습니다.");
                    System.out.println("\n=====================================");
                    // 구매할 아이템이 기본시리즈이면 플레이어 돈에서 2000원 차감하는 기능
                    for (int j = 0; j < basiclItem.length; j++) {
                        if(itemName.equals(basiclItem[j])){
                            Player.cost -= buyCost[0];
                            break;
                        }
                    }
                    // 구매할 아이템이 기본시리즈이면 플레이어 돈에서 5000원 차감하는 기능
                    for (int j = 0; j < nomalItem.length; j++) {
                        if(itemName.equals(nomalItem[j])){
                            Player.cost -= buyCost[1];
                            break;
                        }
                    }

                    // 구매할 아이템이 기본시리즈이면 플레이어 돈에서 10000원 차감하는 기능
                    for (int j = 0; j < highItem.length; j++) {
                        if(itemName.equals(highItem[j])){
                            Player.cost -= buyCost[2];
                            break;
                        }
                    }
                    // 구매할 아이템이 기본시리즈이면 플레이어 돈에서 8000원 차감하는 기능
                    for (int j = 0; j < AccessoryItem.length; j++) {
                        if(itemName.equals(AccessoryItem[j])){
                            Player.cost -= buyCost[3];
                            break;
                        }
                    }


                    if (getPlayerId()) {




                    //1. 원본 배열보다 사이즈가 1개 더 큰 새 배열을 생성
                        String[] temp = new String[Player.inventory.length + 1];

                        //2. 기존 배열 데이터를 복사해서 신규배열로 이동
                        for (i = 0; i < Player.inventory.length; i++) {
                            temp[i] = Player.inventory[i];
                        }
                        //3. 추가할 데이터를 맨 마지막 위치에 저장
                        temp[temp.length - 1] = itemName;

                        //5. 주소지 이전
                        Player.inventory = temp;
                        temp = null;



                        break;
                    }

                }

            }

        }

    }


    public boolean getPlayerId(){//현재 로그인한 아이디가 aaa인지 확인해주고 맞으면 true를 반환하는 메서드
        Player id = pc.searchId(lgl.id1);
        if("aaa".equals(id));
        return true;
    }

}// end class
